<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gbl.mapper.CategoryMapper">
<!--增删改查sql语句-->
    <!--  新增  -->
    <insert id="insert">
        INSERT INTO `category` (`name`, `parent`, `sort`, `create_time`) VALUES (#{name},#{parent} , #{sort}, #{createTime});
    </insert>
    <!--  修改  -->
    <update id="update">
        update category
        <trim prefix="set" suffixOverrides=",">
            <if test="name!=null and name!=''">
                name=#{name},
            </if>
            <if test="parent!=null and parent!=''">
                parent=#{parent},
            </if>
            <if test="sort!=null and sort!=''">
                sort=#{sort},
            </if>
        </trim>
        where id=#{id}
    </update>
    <!--  删除  -->
    <delete id="delete">
        delete from category where id=#{id}
    </delete>
<!--    查询出关联父类别的id-->

    <select id="findDelChildId" resultType="com.gbl.entity.SomeId">
        select children_id from kind_relationship where father_id = #{id}
    </select>
    <!--  查询  -->
    <select id="select" resultType="com.gbl.entity.Category">
        select * from category
        <where>
            <if test="name!=null and name!=''">
                name like '%${name}%'
            </if>
        </where>
    </select>

    <!--  根据id查询  -->
    <select id="selectById" resultType="com.gbl.entity.Category">
        select * from category where id=#{id}
    </select>

    <!--子类别mapper-->
    <!--    查询子类别   -->
    <select id="findAllChild" resultType="com.gbl.entity.CategoryChildren">
        select c.id,c.cname,f.`name` as 'father',c.sort,c.create_time  from category f
        INNER JOIN kind_relationship kr on kr.father_id = f.id
        INNER JOIN category_children c on kr.children_id = c.id
        where f.id = #{id}
    </select>
    <!--批量删除删除子类别-->
    <delete id="delChildren" parameterType="java.util.List">
        delete from category_children where id in
        <foreach collection="list" item="ids" open="(" separator="," close=")">
            #{ids.childrenId}
        </foreach>
    </delete>
    <delete id="delChildOnly" >
        delete from category_children where id =#{id}
    </delete>
    <!--删除关联的表-->
    <delete id="delRelation" >
        delete from kind_relationship where children_id =#{id}
    </delete>
    <delete id="deleteMany" parameterType="java.lang.Long">
        delete from category where id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>
    <delete id="deleteManyChildren" parameterType="java.lang.Long">
        delete from category_children where id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>
    <delete id="deleteFatherChildren" parameterType="java.lang.Long">
        delete from kind_relationship where father_id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>
    <!--新增子类-->
    <insert id="addChild" keyProperty="id" useGeneratedKeys="true" parameterType="com.gbl.entity.CategoryChildren">
        INSERT INTO `category_children` ( `cname`, `sort`, `create_time`) VALUES (#{cname}, #{sort}, #{createTime});
    </insert>
    <!--新增父类别子类别关联-->
    <insert id="addRelation">
        INSERT INTO `kind_relationship` (`children_id`, `father_id`) VALUES (#{childId}, #{fatherId});
    </insert>
    <insert id="fatherWithCourse">
        INSERT INTO `course_category_relationship` (`course_Id`, `category_id`) VALUES (#{cid}, #{fid});
    </insert>
    <insert id="kidWithCourse">
        INSERT INTO `course_categorychild_relationship` (`course_id`, `c_childId`) VALUES (#{cid}, #{kid});
    </insert>
    <insert id="forChild">
        INSERT INTO `course_categorychild_relationship` (`course_id`, `c_childId`) VALUES (#{cid}, #{kid});
    </insert>
    <insert id="forFather">
        INSERT INTO `course_category_relationship` (`course_Id`, `category_id`) VALUES (#{cid}, #{fid});
    </insert>

    <!--    前台查询子类的名字-->
    <select id="selectName" resultType="com.gbl.entity.CategoryChildren">
        select c.id, c.cname ,c.sort,c.create_time  from category f
        INNER JOIN kind_relationship kr on kr.father_id = f.id
        INNER JOIN category_children c on kr.children_id = c.id
        where f.id = #{id}
    </select>
    <select id="selectChild" resultType="com.gbl.entity.CategoryChildren">
        select c.id, c.cname,c.sort,c.create_time  from category f
        INNER JOIN kind_relationship kr on kr.father_id = f.id
        INNER JOIN category_children c on kr.children_id = c.id
    </select>
<!--    查询一个子类sql-->
    <select id="selectChildren" resultType="com.gbl.entity.CategoryChildren">
        select * from category_children where id = #{id}
    </select>
    <select id="findChildById" resultType="com.gbl.entity.Category"></select>
    <select id="getName" resultType="com.gbl.entity.Category">
        select id,`name` from category
        <where>
            <if test="id!=null and id!=''">
                id = #{id}
            </if>
        </where>
    </select>
    <select id="getChildrenName" resultType="com.gbl.entity.CategoryChildren">
        select cc.id,cc.cname from category c
        INNER JOIN kind_relationship kr on c.id = kr.father_id
        INNER JOIN category_children cc ON cc.id =kr.children_id
        where c.id = #{id}
    </select>
    <select id="findAllFatherId" resultType="java.lang.Long">
        select k.children_id from kind_relationship k where k.father_id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </select>
    <!--    //修改子类-->
    <update id="updChildren">
        update category_children
        <trim prefix="set" suffixOverrides=",">
            <if test="cname!=null and cname!=''">
                cname =#{cname},
            </if>
            <if test="sort!=null and sort!=''">
                sort =#{sort}
            </if>
        </trim>
        where id = #{id}
    </update>
    <update id="updChild"></update>

</mapper>