<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gbl.mapper.CourseMapper">
    <!--增删改查sql语句-->
    <!--  新增  -->
    <insert id="insert"  keyProperty="id" useGeneratedKeys="true" parameterType="com.gbl.entity.Course">
        INSERT INTO `course` (`course_name`, `course_time`, `teacher`, `order`, `rec`, `cover`, `create_time`) VALUES (#{courseName}, #{courseTime}, #{teacher},#{order},#{rec}, #{cover}, #{createTime});
    </insert>
    <!--  修改  -->
    <update id="update">
        update course
        <trim prefix="set" suffixOverrides=",">
            <if test="courseName!=null and courseName!=''">
                course_name=#{courseName},
            </if>
            <if test="courseTime!=null and courseTime!=''">
                course_time=#{courseTime},
            </if>
            <if test="isDelete!=null and isDelete!=''">
                `is_delete`=#{isDelete},
            </if>
            <if test="teacher!=null and teacher!=''">
                teacher=#{teacher},
            </if>
            <if test="order!=null and order!=''">
                `order`=#{order},
            </if>
            <if test="cover!=null and cover!=''">
                `cover`=#{cover},
            </if>
            <if test="rec!=null and rec!=''">
                `rec`=#{rec},
            </if>
        </trim>
        where id=#{id}
    </update>
    <update id="fakeDelete">

    </update>
    <update id="recover">
        UPDATE `course` SET  `is_delete` = 0 WHERE `id` = #{cid};
    </update>

    <!--  删除  -->
    <delete id="delete">
        delete from course where id=#{id}
    </delete>
<!--    查询要删除的id数组-->
<!--    <resultMap id="" type=""-->
    <select id="getChapterIds" resultType="com.gbl.entity.SomeId">
        select chapter_id from course_chapter_relationship where course_id = #{id}
    </select>
    <!--  查询  -->
    <select id="select" resultType="com.gbl.entity.Course">
        select c.*,ctg.name as category from course c
        inner join course_category_relationship ccr on ccr.course_Id = c.id
        inner join category ctg on ctg.id = ccr.category_id
        <where>
            <if test="courseName!=null and courseName!=''">
                course_name like '%${courseName}%'
            </if>
            <if test="teacher!=null and teacher!=''">
                and teacher like '%${teacher}%'
            </if>
            <if test="rec!=null and rec!=''">
                and rec like '%${rec}%'
            </if>
        </where>
    </select>
    <!--  根据id查询  -->
    <select id="selectById" resultType="com.gbl.entity.Course">
        select c.*,ccr.category_id father_id,cccr.c_childId child_id from course c
        INNER JOIN course_category_relationship ccr on ccr.course_id = c.id
        INNER JOIN course_categorychild_relationship cccr on cccr.course_id = c.id
        where c.id = #{id}
    </select>
    <select id="findCourseById" resultType="com.gbl.entity.Course">
        select * from course where id = #{id}
    </select>
<!--    新增收藏课程-->
    <insert id="collect" keyProperty="id" useGeneratedKeys="true" parameterType="com.gbl.entity.UserCourseStudy">
        INSERT INTO `study_course` ( `ask_num`, `learn_time`, `finish_time`, `state`) VALUES (0, 0.00, 0.00, b'0');
    </insert>
<!--    新增课程和课程的学习记录关联-->

    <insert id="courseAndStudy">
        INSERT INTO `study_course_relationship` (`cid`, `sid`) VALUES (#{cid}, #{sid});
    </insert>
<!--    新增用户和课程关联-->
    <insert id="userAndStudy">
        INSERT INTO `user_study_relationship` (`uid`, `sid`) VALUES (#{uid}, #{sid});
    </insert>
    <select id="newCourses" resultType="com.gbl.entity.Course">
        select c.*, ctg.name as category from course c
        inner join course_category_relationship ccr on ccr.course_Id = c.id
        inner join category ctg on ctg.id = ccr.category_id
        order by c.create_time desc
    </select>
    <select id="newCourse" resultType="com.gbl.entity.Course">
        select * from course order by create_time desc;
    </select>
    <!--    删除课程关联的章节-->
    <delete id="deleteRelationship">
        delete from course_chapter_relationship where course_id = #{id};
    </delete>
<!--    查询父类的类别课程-->
    <select id="fatherCourse" resultType="com.gbl.entity.Course">
        select c.id,c.course_name,c.course_time,teacher,c.`order`,c.rec,c.cover from course c
        INNER JOIN course_category_relationship ccr on c.id = ccr.course_Id
        INNER JOIN category cg ON cg.id = ccr.category_id
        where cg.id = #{id}
    </select>
<!--    查询子类的类别课程-->
    <select id="childCourse" resultType="com.gbl.entity.Course">
        select c.id,c.course_name,c.course_time,teacher,c.`order`,c.rec,c.cover from course c
        INNER JOIN course_categorychild_relationship ccrp on ccrp.course_id = c.id
        INNER JOIN category_children cc on cc.id = ccrp.c_childId
        where cc.id = #{id}
    </select>
    <select id="hotCourse" resultType="com.gbl.entity.Course">
        SELECT c.id , c.course_name, c.create_time, c.cover,COUNT(a.id) AS question_count
        FROM course c
                 LEFT JOIN ask_course_relationship acr ON c.id = acr.cid
                 LEFT JOIN ask a ON a.id = acr.qid
        GROUP BY c.id, c.course_name
        ORDER BY COUNT(a.id) DESC

    </select>
    <select id="findChapterId" resultType="com.gbl.entity.SomeId">
        select chapter_id from course_chapter_relationship where course_id = #{id}
    </select>
</mapper>